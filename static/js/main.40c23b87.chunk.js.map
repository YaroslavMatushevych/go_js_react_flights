{"version":3,"sources":["components/FlightsTimeTable/components/FlightInfo.js","components/FlightsTimeTable/index.js","components/FlightsTimeTable/FlightsTimeTable.js","components/FlightsBoard/index.js","components/FlightsBoard/FlightsBoard.js","components/FilterSlider/FilterSlider.js","components/FilterSlider/index.js","App.js","reportWebVitals.js","index.js"],"names":["FlightInfo","flight","departure","airport","arrival","flight_status","flight_date","FlightsTimeTable","flightsData","className","map","index","FlightsBoard","props","diagramRef","React","this","current","diagram","getDiagram","addDiagramListener","onDiagramEvent","onDiagramDoubleClicked","removeDiagramListener","$","go","make","text","color","model","linkKeyProperty","makeUniqueKeyFunction","m","data","k","key","findNodeDataForKey","makeUniqueLinkKeyFunction","findLinkDataForKey","nodeTemplate","doubleClick","e","diag","pt","lastInput","documentPoint","w","viewportBounds","width","scale","h","height","pos","x","y","anim","easing","EaseLinear","add","position","start","parse","makeTwoWay","stringify","name","fill","strokeWidth","portId","fromLinkable","toLinkable","cursor","margin","editable","font","linkTemplate","ofModel","toArrow","ref","divClassName","initDiagram","nodeDataArray","linkDataArray","modelData","onModelChange","skipsDiagramUpdate","useStyles","makeStyles","theme","root","spacing","marks","value","label","valuetext","FilterSlider","limit","onChange","onChangeCommited","classes","Typography","id","gutterBottom","Slider","onChangeCommitted","min","max","getAriaValueText","aria-labelledby","step","valueLabelDisplay","App","useState","limitCommited","state","setState","loading","setLoading","useEffect","a","axios","get","then","res","i","length","push","item","loc","from","to","catch","err","console","log","fetchFlights","CircularProgress","size","style","padding","changes","event","newValue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40c23b87.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function FlightInfo({ flight }) {\n  return (\n    <li>\n      <p>\n        Flight from {flight.departure.airport} to {flight.arrival.airport}, {flight.flight_status} for {flight.flight_date}\n      </p>\n    </li>\n  );\n}\n","import FlightsTimeTable from './FlightsTimeTable';\n\nexport default FlightsTimeTable;","import React from 'react';\nimport FlightInfo from './components/FlightInfo';\n\nexport default function FlightsTimeTable({ flightsData }) {\n  return (\n    <ol className=\"list-of-flights\">\n      { \n        flightsData.map((flight, index) => {\n          return <FlightInfo key={index} flight={flight} />\n        })\n      }\n    </ol>\n  );\n}\n","import FlightBoard from './FlightsBoard';\nimport FlightsBoard from './FlightsBoard';\n\nexport default FlightsBoard;","import * as React from 'react';\nimport * as go from 'gojs';\nimport { ReactDiagram } from 'gojs-react';\n\n  export default class FlightsBoard extends React.Component {\n    /**\n     * Ref to keep a reference to the component, which provides access to the GoJS diagram via getDiagram().\n     */\n    diagramRef;\n\n    constructor(props) {\n      super(props);\n      this.diagramRef = React.createRef();\n    }\n\n    /**\n     * Get the diagram reference and add any desired diagram listeners.\n     * Typically the same function will be used for each listener,\n     * with the function using a switch statement to handle the events.\n     * This is only necessary when you want to define additional app-specific diagram listeners.\n     */\n    componentDidMount() {\n      if (!this.diagramRef.current) return;\n      const diagram = this.diagramRef.current.getDiagram();\n      if (diagram) {\n        diagram.addDiagramListener('ChangedSelection', this.props.onDiagramEvent);\n        diagram.addDiagramListener('ObjectDoubleClicked', this.props.onDiagramDoubleClicked);\n      }\n    }\n\n    /**\n     * Get the diagram reference and remove listeners that were added during mounting.\n     * This is only necessary when you have defined additional app-specific diagram listeners.\n     */\n    componentWillUnmount() {\n      if (!this.diagramRef.current) return;\n      const diagram = this.diagramRef.current.getDiagram();\n      if (diagram) {\n        diagram.removeDiagramListener('ChangedSelection', this.props.onDiagramEvent);\n        diagram.removeDiagramListener('ObjectDoubleClicked', this.props.onDiagramDoubleClicked);\n      }\n    }\n\n    /**\n     * Diagram initialization method, which is passed to the ReactDiagram component.\n     * This method is responsible for making the diagram and initializing the model, any templates,\n     * and maybe doing other initialization tasks like customizing tools.\n     * The model's data should not be set here, as the ReactDiagram component handles that via the other props.\n     */\n    initDiagram() {\n      const $ = go.GraphObject.make;\n      // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\n      // $ObjectDoubleClicked\n      const diagram =\n        $(go.Diagram,\n          {\n            'undoManager.isEnabled': true,  // must be set to allow for model change listening\n            // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\n            'clickCreatingTool.archetypeNodeData': { text: 'new node', color: 'lightblue' },\n            // doubleClick: function(e) {\n            //   var diag = e.diagram;\n            //   var pt = diag.lastInput.documentPoint;\n            //   var sc = 2.5;  // target scale\n            //   var w = diag.viewportBounds.width * diag.scale / sc;\n            //   var h = diag.viewportBounds.height * diag.scale / sc;\n            //   var pos = new go.Point(pt.x - w/2, pt.y - h/2);  // target position\n            //   var anim = new go.Animation();\n            //   anim.easing = go.Animation.EaseLinear;\n            //   anim.add(diag, \"scale\", diag.scale, sc);\n            //   anim.add(diag, \"position\", diag.position, pos);\n            //   anim.start();\n            // },\n            model: $(go.GraphLinksModel,\n              {\n                linkKeyProperty: 'key',  // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\n                // positive keys for nodes\n                makeUniqueKeyFunction: (m, data) => {\n                  let k = data.key || 1;\n                  while (m.findNodeDataForKey(k)) k++;\n                  data.key = k;\n                  return k;\n                },\n                // negative keys for links\n                makeUniqueLinkKeyFunction: (m, data) => {\n                  let k = data.key || -1;\n                  while (m.findLinkDataForKey(k)) k--;\n                  data.key = k;\n                  return k;\n                }\n              })\n          });\n\n      // define a simple Node template\n      diagram.nodeTemplate =\n        $(go.Node, {doubleClick: function(e) {\n          var diag = e.diagram;\n          var pt = diag.lastInput.documentPoint;\n          var sc = 2.5;  // target scale\n          var w = diag.viewportBounds.width * diag.scale / sc;\n          var h = diag.viewportBounds.height * diag.scale / sc;\n          var pos = new go.Point(pt.x - w/2, pt.y - h/2);  // target position\n          var anim = new go.Animation();\n          anim.easing = go.Animation.EaseLinear;\n          anim.add(diag, \"scale\", diag.scale, sc);\n          anim.add(diag, \"position\", diag.position, pos);\n          anim.start();\n        },},'Auto',  // the Shape will go around the TextBlock\n          new go.Binding('location', 'loc', go.Point.parse).makeTwoWay(go.Point.stringify),\n          $(go.Shape, 'RoundedRectangle',\n            {\n              name: 'SHAPE', fill: 'white', strokeWidth: 0,\n              // set the port properties:\n              portId: '', fromLinkable: true, toLinkable: true, cursor: 'pointer'\n            },\n            // Shape.fill is bound to Node.data.color\n            new go.Binding('fill', 'color')),\n          $(go.TextBlock,\n            { margin: 8, editable: true, font: '400 .875rem Roboto, sans-serif' },  // some room around the text\n            new go.Binding('text').makeTwoWay()\n          )\n        );\n\n      // relinking depends on modelData\n      diagram.linkTemplate =\n        $(go.Link,\n          new go.Binding('relinkableFrom', 'canRelink').ofModel(),\n          new go.Binding('relinkableTo', 'canRelink').ofModel(),\n          $(go.Shape),\n          $(go.Shape, { toArrow: 'Standard' })\n        );\n\n      return diagram;\n    }\n\n    render() {\n      return (\n        <ReactDiagram\n          ref={this.diagramRef}\n          divClassName='diagram-component'\n          initDiagram={this.initDiagram}\n          nodeDataArray={this.props.nodeDataArray}\n          linkDataArray={this.props.linkDataArray}\n          modelData={this.props.modelData}\n          onModelChange={this.props.onModelChange}\n          skipsDiagramUpdate={this.props.skipsDiagramUpdate}\n        />\n      );\n    }\n  }","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 300,\n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n\nconst marks = [\n  {\n    value: 0,\n    label: '0 flight',\n  },\n  {\n    value: 50,\n    label: '50 flights',\n  },\n];\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function FilterSlider({ limit, onChange, onChangeCommited }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"discrete-slider-always\" gutterBottom>\n        Flights to show\n      </Typography>\n      <Slider\n        value={typeof limit === 'number' ? limit : 0}\n        onChange={onChange}\n        onChangeCommitted={onChangeCommited}\n        min={1}\n        max={50}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider-always\"\n        step={1}\n        marks={marks}\n        valueLabelDisplay=\"on\"\n      />\n    </div>\n  );\n}","import FilterSlider from './FilterSlider';\n\nexport default FilterSlider;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  CircularProgress,\n} from '@material-ui/core';\n// components\nimport FlightsTimeTable from './components/FlightsTimeTable';\nimport FlightsBoard from './components/FlightsBoard';\nimport FilterSlider from './components/FilterSlider';\n// styles\nimport './App.css';\n\nfunction App() {\n  const [state, setState] = useState({\n    flightsData: [],\n    nodeDataArray: [],\n    linkDataArray: [],\n    limit: 10,\n    limitCommited: 10,\n  });\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchFlights = async () => {\n      setLoading(true);\n      await axios.get(`http://api.aviationstack.com/v1/flights?access_key=998e5a4a99bc0905481195a2d92ba876&limit=${state.limitCommited}&flight_status=scheduled`)\n        .then(res => {\n          const flightsData = res.data.data;\n          let linkDataArray = [];\n          let nodeDataArray = [];\n          for (let i = 0; i < flightsData.length; i++) {\n            nodeDataArray.push({ text: flightsData[i].departure.airport, color: 'lightblue' })\n            nodeDataArray.push({ text: flightsData[i].arrival.airport, color: 'green' })\n          }\n          nodeDataArray = nodeDataArray.map((item, index) => {\n            item.key = index;\n            item.loc = `${100 * index} ${100 * index}`;\n            return item;\n          })\n          for (let i = 0; i < nodeDataArray.length; i++) {\n            if (i % 2 || i === 0) {\n              linkDataArray.push({ from: i, to: i + 1 })\n            }\n          }\n          linkDataArray = linkDataArray.map((item, index) => {\n            item.key = (index + 1) * -1;\n            return item;\n          })\n          setState({\n            ...state,\n            linkDataArray: linkDataArray,\n            nodeDataArray: nodeDataArray,\n            flightsData: flightsData,\n          })\n        })\n        .catch(err => console.log(err));\n      setLoading(false);\n    }\n\n    fetchFlights();\n  }, [state.limitCommited]);\n\n\n  /**\n   * This function handles any changes to the GoJS model.\n   * It is here that you would make any updates to your React state, which is dicussed below.\n   */\n  const handleModelChange = (changes) => {\n    // console.log(changes)\n  }\n\n  const handleDiagramDoubleClicked = (e) => {\n    // console.log(e)\n  }\n\n  const handleFilterOnChange = (event, newValue) => {\n    setState({\n      ...state,\n      limit: newValue,\n    })\n  }\n\n  const handleFilterOnCommitted = (event, newValue) => {\n    setState({\n      ...state,\n      limitCommited: newValue,\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <main className=\"main-block\">\n        <div className=\"flights-board-container\">\n          {loading ?\n            <CircularProgress\n              size=\"45px\"\n              color=\"primary\"\n              style={{ padding: 100 }}\n            />\n            :\n            <FlightsBoard\n              flightsData={state.flightsData}\n              divClassName='diagram-component'\n              nodeDataArray={state.nodeDataArray}\n              linkDataArray={state.linkDataArray}\n              onModelChange={handleModelChange}\n              onDiagramDoubleClicked={handleDiagramDoubleClicked}\n            />\n          }\n        </div>\n\n        <div className=\"flights-timetable-container\">\n          {loading ?\n            <CircularProgress\n              size=\"45px\"\n              color=\"primary\"\n              style={{ padding: 100 }}\n            />\n            :\n            <FlightsTimeTable flightsData={state.flightsData} />\n          }\n        </div>\n\n        <div className=\"filter-slider-container\">\n          <FilterSlider\n            limit={state.limit}\n            onChange={handleFilterOnChange}\n            onChangeCommited={handleFilterOnCommitted}\n          />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}